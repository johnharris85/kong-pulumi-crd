// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./kongClusterPlugin";
export * from "./kongConsumer";
export * from "./kongIngress";
export * from "./kongPlugin";

// Import resources to register:
import { KongClusterPlugin } from "./kongClusterPlugin";
import { KongConsumer } from "./kongConsumer";
import { KongIngress } from "./kongIngress";
import { KongPlugin } from "./kongPlugin";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:configuration.konghq.com/v1:KongClusterPlugin":
                return new KongClusterPlugin(name, <any>undefined, { urn })
            case "kubernetes:configuration.konghq.com/v1:KongConsumer":
                return new KongConsumer(name, <any>undefined, { urn })
            case "kubernetes:configuration.konghq.com/v1:KongIngress":
                return new KongIngress(name, <any>undefined, { urn })
            case "kubernetes:configuration.konghq.com/v1:KongPlugin":
                return new KongPlugin(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "configuration.konghq.com/v1", _module)
